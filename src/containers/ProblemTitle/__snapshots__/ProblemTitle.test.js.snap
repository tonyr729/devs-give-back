// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProblemTitle should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProblemTitle
    client={
        Object {
            "name": "tony",
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="welcome"
>
          Hi 
          tony
          ,
</p>,
        <p
          className="title-instructions"
>
          Briefly describe your problem...
</p>,
        <p
          className="example"
>
          Ex: Looking for a solution to help an afterschool program
</p>,
        <input
          autoFocus={true}
          className="title-input"
          maxLength="70"
          onChange={[Function]}
          onKeyDown={[Function]}
          value=""
/>,
        <button
          className="title-next-button"
          onClick={[Function]}
>
          <img
                    className="right-arrow-img"
                    src="right_arrow.svg"
          />
</button>,
      ],
      "className": "client-background",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Hi ",
            "tony",
            ",",
          ],
          "className": "welcome",
        },
        "ref": null,
        "rendered": Array [
          "Hi ",
          "tony",
          ",",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Briefly describe your problem...",
          "className": "title-instructions",
        },
        "ref": null,
        "rendered": "Briefly describe your problem...",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Ex: Looking for a solution to help an afterschool program",
          "className": "example",
        },
        "ref": null,
        "rendered": "Ex: Looking for a solution to help an afterschool program",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoFocus": true,
          "className": "title-input",
          "maxLength": "70",
          "onChange": [Function],
          "onKeyDown": [Function],
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            className="right-arrow-img"
            src="right_arrow.svg"
/>,
          "className": "title-next-button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "right-arrow-img",
            "src": "right_arrow.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="welcome"
>
            Hi 
            tony
            ,
</p>,
          <p
            className="title-instructions"
>
            Briefly describe your problem...
</p>,
          <p
            className="example"
>
            Ex: Looking for a solution to help an afterschool program
</p>,
          <input
            autoFocus={true}
            className="title-input"
            maxLength="70"
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
/>,
          <button
            className="title-next-button"
            onClick={[Function]}
>
            <img
                        className="right-arrow-img"
                        src="right_arrow.svg"
            />
</button>,
        ],
        "className": "client-background",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Hi ",
              "tony",
              ",",
            ],
            "className": "welcome",
          },
          "ref": null,
          "rendered": Array [
            "Hi ",
            "tony",
            ",",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Briefly describe your problem...",
            "className": "title-instructions",
          },
          "ref": null,
          "rendered": "Briefly describe your problem...",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Ex: Looking for a solution to help an afterschool program",
            "className": "example",
          },
          "ref": null,
          "rendered": "Ex: Looking for a solution to help an afterschool program",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoFocus": true,
            "className": "title-input",
            "maxLength": "70",
            "onChange": [Function],
            "onKeyDown": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              className="right-arrow-img"
              src="right_arrow.svg"
/>,
            "className": "title-next-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "right-arrow-img",
              "src": "right_arrow.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

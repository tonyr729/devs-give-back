// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Choice should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="user-choice"
>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/client-login"
          >
                    <p>
                              I have a problem.
                    </p>
          </NavLink>
</div>,
        <div
          className="dev-choice"
>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dev-login"
          >
                    <p>
                              I have a solution.
                    </p>
          </NavLink>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/client-login"
>
            <p>
                        I have a problem.
            </p>
</NavLink>,
          "className": "user-choice",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <p>
              I have a problem.
</p>,
            "to": "/client-login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I have a problem.",
            },
            "ref": null,
            "rendered": "I have a problem.",
            "type": "p",
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/dev-login"
>
            <p>
                        I have a solution.
            </p>
</NavLink>,
          "className": "dev-choice",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <p>
              I have a solution.
</p>,
            "to": "/dev-login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I have a solution.",
            },
            "ref": null,
            "rendered": "I have a solution.",
            "type": "p",
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="user-choice"
>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/client-login"
            >
                        <p>
                                    I have a problem.
                        </p>
            </NavLink>
</div>,
          <div
            className="dev-choice"
>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dev-login"
            >
                        <p>
                                    I have a solution.
                        </p>
            </NavLink>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              ariaCurrent="true"
              to="/client-login"
>
              <p>
                            I have a problem.
              </p>
</NavLink>,
            "className": "user-choice",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": <p>
                I have a problem.
</p>,
              "to": "/client-login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I have a problem.",
              },
              "ref": null,
              "rendered": "I have a problem.",
              "type": "p",
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              ariaCurrent="true"
              to="/dev-login"
>
              <p>
                            I have a solution.
              </p>
</NavLink>,
            "className": "dev-choice",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": <p>
                I have a solution.
</p>,
              "to": "/dev-login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I have a solution.",
              },
              "ref": null,
              "rendered": "I have a solution.",
              "type": "p",
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
